@using KSTU.Common.DTOs
@using System.Web
@model List<ClusterEntityDTO>
@{
    ViewData["Title"] = "Результат кластеризации";
}

<h1>@ViewData["Title"]</h1>
<div id="chart_div"></div>
<table class="table table-striped table-bordered" id="myTable" width="100%">
    @{
        <thead>
            <tr>
                <th>Номер кластера</th>
                <th>Название</th>
                @foreach(var item in Model[0].Interests)
        {
            <th>@item.Name</th>
        }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>@(item.CentroidId + 1)</td>
                <td>@item.Name</td>
                @{
                    foreach (var interes in item.Interests)
                    {
                        <td>
                            @interes.Weight2
                        </td>
                    }
                }
            </tr>
            }
        </tbody>
    }
</table>

<script>
    $(document).ready(function () {
        $('#myTable').DataTable({
            "language": {
                "url": '/lib/datatables/Russian.json'
            }
    });
    });
</script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    // Load the Visualization API and the corechart package.
    google.charts.load('current', { 'packages': ['corechart'] });

    // Set a callback to run when the Google Visualization API is loaded.
    google.charts.setOnLoadCallback(drawChart);

    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawChart() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Topping');
        data.addColumn('number', 'Slices');

        var model = @Html.Raw(Json.Serialize(Model.GroupBy(g => g.CentroidId).Select(s => new { Key = s.Key + 1, Count = s.Count() })));
        for (var i = 0; i < model.length; i++) {
            var obj = model[i];
            data.addRows([['Кластер '+obj.key,obj.count]])
            console.log(obj);
        }

        //data.addRows([
        //    ['Mushrooms', 3],
        //    ['Onions', 1],
        //    ['Olives', 1],
        //    ['Zucchini', 1],
        //    ['Pepperoni', 2]
        //]);

        // Set chart options
        var options = {
            'title': 'Диаграмма результата кластеризации',
            'width': 400,
            'height': 300
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
        chart.draw(data, options);
    }
</script>